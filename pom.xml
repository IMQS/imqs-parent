<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>za.co.imqs</groupId>
    <artifactId>imqs-parent</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>IMQS Parent Pom</name>
    <description>Holds company wide configuration for Java Artifacts.</description>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <url>http://nexus.imqs.co.za:8081/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <url>http://nexus.imqs.co.za:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <scm>
        <connection>scm:git:git@github.com:IMQS/imqs-parent.git</connection>
        <url>scm:git:git@github.com:IMQS/imqs-parent.git</url>
        <developerConnection>scm:git:git@github.com:IMQS/imqs-parent.git</developerConnection>
    </scm>

    <properties>
        <!-- Java Service Wrapper Properties -->
        <jsw.main.class>your.applications.main.class</jsw.main.class>

        <!-- Space seperated list of configuration files or HTTP services -->
        <jsw.configuration/>
        <jsw.log.config>"C:/imqsbin/conf/logback.groovy"</jsw.log.config>

        <!-- log file name for service - without the .log extension -->
        <jsw.logfilename>"C:/imqsvar/logs/${project.artifactId}"</jsw.logfilename>

        <!-- service http port here -->
        <jsw.port>
            0000
        </jsw.port>

        <!-- Default Assembly Descriptor -->
        <assemble.descriptor>src/main/assembly/src.xml</assemble.descriptor>

        <!-- Default Test Properties -->
        <maven.test.skip>false</maven.test.skip>

        <!--Default Maven Release Properties -->
        <artifact.rel/>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <jackson>2.9.10.1</jackson>
        <jaxb>2.2.11</jaxb>
        <slf4j>1.7.15</slf4j>
        <log4j>2.17.0</log4j>
        <logback>1.2.3</logback>
        <lombok>1.18.4</lombok>
        <groovy>2.5.8</groovy>
        <groovy-eclipse-batch>2.5.8-03</groovy-eclipse-batch>
        <groovy-eclipse-compiler>3.6.0-03</groovy-eclipse-compiler>
        <commons-lang>3.9</commons-lang>
        <commons-collection>4.3</commons-collection>
        <jetty>9.4.18.v20190429</jetty>


        <!--
            NOTE: The Jetty and Spring versions have been chosen to correspond to be the same
            as those used by the Spring Boot version listed below. Thsi avoids incompatibilities
            when things are mixed and matched.

            Increment the version of this POM whenever these version change

        -->
        <spring-boot>2.1.5.RELEASE</spring-boot>
        <springframework.core>5.1.7.RELEASE</springframework.core>
        <springframework.beans>${springframework.core}</springframework.beans>
        <springframework.security>${springframework.core}</springframework.security>
        <springframework.rabbit>2.1.6.RELEASE</springframework.rabbit>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.9.8</version>
            </dependency>

            <!-- Persistence -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.2.5</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.microsoft.sqlserver/sqljdbc4 -->
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>4.0</version>
            </dependency>

            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>1.3.173</version>
            </dependency>


            <dependency> <!-- DEPRECATED -->
                <groupId>com.jolbox</groupId>
                <artifactId>bonecp</artifactId>
                <version>0.8.0.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>3.2.0</version>
            </dependency>

            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>3.4.1</version>
            </dependency>


            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok}</version>
            </dependency>


            <!-- Is required for jaxb (used by Jackson) as of Java 1.9 -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jaxb}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
            </dependency>


            <!-- Jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>2.3.2</version>
            </dependency>

            <!-- Apache -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collection}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang}</version>
            </dependency>


            <!-- Groovy -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy}</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-json</artifactId>
                <version>${groovy}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-nop</artifactId>
                <version>${slf4j}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.jmx</groupId>
                        <artifactId>jmxri</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.jdmk</groupId>
                        <artifactId>jmxtools</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.jms</groupId>
                        <artifactId>jms</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback}</version>
            </dependency>


            <!--
                Our shared modules
            -->
            <dependency>
                <groupId>za.co.imqs.configuration</groupId>
                <artifactId>configuration-client</artifactId>
                <version>3.0.1-SNAPSHOT</version>
            </dependency>

            <!--
                Jetty required libraries
            -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-annotations</artifactId>
                <version>${jetty}</version>
            </dependency>


            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty}</version>
            </dependency>


            <!--
                Spring required libraries
            -->

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${springframework.beans}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-oxm</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jms</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${springframework.core}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.amqp</groupId>
                <artifactId>spring-rabbit</artifactId>
                <version>${springframework.rabbit}</version>
            </dependency>


            <!-- TEST -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${springframework.core}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/log4j.properties</exclude>
                    <exclude>**/log4j.xml</exclude>
                    <exclude>**/logback.xml</exclude>
                    <exclude>**/logback-test.xml</exclude>
                    <exclude>**/logback.groovy</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/template</directory>
                <filtering>true</filtering>
                <includes>
                    <include>za/co/imqs/**/package-info.java</include>
                </includes>
                <targetPath>${project.basedir}/src/main/java</targetPath>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>

                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>

                <plugin>
                    <!-- Version 2.x (from github): GMaven 2.x no longer supports any integration for compilation of Groovy sources.
                    There were too many problems with stub-generation and hooking up compliation to the proper Maven
                    lifecycle phases to effectivly support. -->
                    <!-- ALSO : Codehaus does not serve up repositories anymore. We should use something else here. -->
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven</artifactId>
                    <version>1.5</version>
                </plugin>

                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.11.2</version>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>2.22.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-changes-plugin</artifactId>
                    <version>2.12.1</version>
                </plugin>

                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.3</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>appassembler-maven-plugin</artifactId>
                    <version>2.1.0</version>
                </plugin>

                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>

                <plugin>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>


            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>unit-tests</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <skip>${maven.test.skip}</skip>
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <includes>
                                <include>**/*Test.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*IntegrationTest.java</exclude>
                                <exclude>**/*ManualTest.java</exclude>
                                <exclude>**/*$*.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <skip>${maven.test.skip}</skip>
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <includes>
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/Test*.java</exclude>
                                <exclude>**/*ManualTest.java</exclude>
                                <exclude>**/*$*.java</exclude>
                            </excludes>
                            <enableAssertions>false</enableAssertions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <useEditMode>true</useEditMode>
                    <releaseVersion>${artifact.rel}</releaseVersion>
                    <scmCommentPrefix>Maven Release Plugin: releasing..</scmCommentPrefix>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>2.2</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


    <profiles>
        <profile>
            <id>code-quality-analysis</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>2.3</version>
                        <executions>
                            <execution>
                                <id>bind-sonarqube-to-verify</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sonar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>containerize</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                            <addResources>true</addResources>
                            <mainClass>${jsw.main.class}</mainClass>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            NOTE: These plug-ins have been retained in here for deployment of windows native services.
            Spring Boot is best deployed as a single jar file and invoked with java -jar but we ned to still run
            them as services in the interim
        -->
        <profile>
            <id>deploy-application</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <configuration>
                            <target>${project.build.directory}/etc</target>
                            <daemons>
                                <daemon>
                                    <id>${project.artifactId}</id>
                                    <mainClass>${jsw.main.class}</mainClass>
                                    <commandLineArguments>
                                        <commandLineArgument>${jsw.configuration}</commandLineArgument>
                                        <commandLineArgument>--server.port=${jsw.port}</commandLineArgument>
                                    </commandLineArguments>
                                    <!-- If you override the jvmSettings, remember to override all of them -->
                                    <jvmSettings>

                                        <initialMemorySize>256M</initialMemorySize>
                                        <maxMemorySize>512M</maxMemorySize>
                                        <maxStackSize>128M</maxStackSize>
                                        <systemProperties>
                                            <systemProperty>log_name=${jsw.logfilename}</systemProperty>
                                            <systemProperty>logging.config=${jsw.log.config}</systemProperty>
                                            <systemProperty>file.encoding=UTF-8</systemProperty>
                                            <systemProperty>Docker=false</systemProperty>
                                            <systemProperty>spring.profiles.active=production</systemProperty>
                                        </systemProperties>
                                    </jvmSettings>
                                    <generatorConfigurations>

                                        <generatorConfiguration>
                                            <generator>jsw</generator>
                                            <includes>
                                                <include>windows-x86-64</include>
                                            </includes>
                                            <configuration>
                                                <property>
                                                    <name>wrapper.java.command</name>
                                                    <value>%JAVA_HOME%/bin/java</value>
                                                </property>
                                                <property>
                                                    <!-- This allows us to place JNI DLLs inside the root directory of the service.
                                                    See 'real-time-service' for an example.
                                                    Why is that the best? Because DLLs often come as one JNI DLL that is dependent upon
                                                    a bunch of other DLLs. The initial JNI DLL is loaded via this path here (ie DOT,
                                                    aka the current directory). The standard wrapper.conf sets the root to the current directory.
                                                    Then, when Windows searches for DLLs, it will search in the current directory, so
                                                    we have the secondary dependencies covered too. This DOES mean that if the current
                                                    directory is changed by the service, then we are screwed. The simple solution is to ensure
                                                    that you load all dependencies at startup, which is a good practice anyway. -->
                                                    <name>wrapper.java.library.path.2</name>
                                                    <value>.</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile</name>
                                                    <value>c:/imqsvar/logs/${project.artifactId}-wrapper.log</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.maxfiles</name>
                                                    <value>20</value>
                                                </property>
                                                <property>
                                                    <name>wrapper.logfile.maxsize</name>
                                                    <value>60m</value>
                                                </property>

                                            </configuration>
                                        </generatorConfiguration>

                                    </generatorConfigurations>
                                    <platforms>
                                        <platform>jsw</platform>
                                    </platforms>
                                </daemon>
                            </daemons>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-create-jsw</id>
                                <goals>
                                    <goal>generate-daemons</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>${assemble.descriptor}</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                            <escapeString/>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-jsw-assemble</id>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>deploy-zip</id>
                                <phase>deploy</phase>
                                <configuration>
                                    <repositoryId>snapshots</repositoryId>
                                    <url>http://nexus.imqs.co.za:8081/nexus/content/repositories/snapshots</url>
                                    <file>${project.build.directory}\${project.build.finalName}.tar.gz</file>
                                    <version>${project.version}</version>
                                    <artifactId>${project.artifactId}-app</artifactId>
                                    <groupId>${project.groupId}</groupId>
                                    <packaging>tar.gz</packaging>
                                    <generatePom>true</generatePom>
                                </configuration>
                                <goals>
                                    <goal>deploy-file</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>deploy-tar</id>
                                <phase>deploy</phase>
                                <configuration>
                                    <repositoryId>snapshots</repositoryId>
                                    <url>http://nexus.imqs.co.za:8081/nexus/content/repositories/snapshots</url>
                                    <file>${project.build.directory}\${project.build.finalName}.zip</file>
                                    <version>${project.version}</version>
                                    <artifactId>${project.artifactId}-app</artifactId>
                                    <groupId>${project.groupId}</groupId>
                                    <packaging>zip</packaging>
                                    <generatePom>true</generatePom>
                                </configuration>
                                <goals>
                                    <goal>deploy-file</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>

            </build>
        </profile>

        <profile>
            <!--
                Test with names ending in TestDeployment will be run during the deployment
                life cycle stage.

                Use this for heavy weight tests that require pre-configured environments.
            -->
            <id>deployment-tests</id>
            <build>
                <plugins>
                    <plugin>

                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                        </configuration>

                        <executions>
                            <execution>
                                <id>deployment-tests</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <skip>false</skip>
                                    <useSystemClassLoader>false</useSystemClassLoader>
                                    <includes>
                                        <include>**/*TestDeployment.java</include>
                                    </includes>
                                    <excludes>
                                        <exclude>**/*IntegrationTest.java</exclude>
                                        <exclude>**/*ManualTest.java</exclude>
                                        <exclude>**/*$*.java</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
